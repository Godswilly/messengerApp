{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\nconst SOCKET_SERVER_URL = 'http://localhost:4000';\n\nconst useChat = roomId => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, message => {\n      const incomingMessage = { ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\n_s(useChat, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\n\nexport default useChat;","map":{"version":3,"names":["useEffect","useRef","useState","socketIOClient","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","messages","setMessages","socketRef","current","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body"],"sources":["/home/kalu/messengerApp/client/src/useChat.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst NEW_CHAT_MESSAGE_EVENT = 'newChatMessage';\nconst SOCKET_SERVER_URL = 'http://localhost:4000';\n\nconst useChat = (roomId) => {\n\tconst [messages, setMessages] = useState([]);\n\tconst socketRef = useRef();\n\n\tuseEffect(() => {\n\t\tsocketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n\t\t\tquery: { roomId },\n\t\t});\n\n\t\tsocketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n\t\t\tconst incomingMessage = {\n\t\t\t\t...message,\n\t\t\t\townedByCurrentUser: message.senderId === socketRef.current.id,\n\t\t\t};\n\t\t\tsetMessages((messages) => [...messages, incomingMessage]);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocketRef.current.disconnect();\n\t\t};\n\t}, [roomId]);\n\n\tconst sendMessage = (messageBody) => {\n\t\tsocketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n\t\t\tbody: messageBody,\n\t\t\tsenderId: socketRef.current.id,\n\t\t});\n\t};\n\n\treturn { messages, sendMessage };\n};\n\nexport default useChat;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,sBAAsB,GAAG,gBAA/B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMQ,SAAS,GAAGT,MAAM,EAAxB;EAEAD,SAAS,CAAC,MAAM;IACfU,SAAS,CAACC,OAAV,GAAoBR,cAAc,CAACE,iBAAD,EAAoB;MACrDO,KAAK,EAAE;QAAEL;MAAF;IAD8C,CAApB,CAAlC;IAIAG,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqBT,sBAArB,EAA8CU,OAAD,IAAa;MACzD,MAAMC,eAAe,GAAG,EACvB,GAAGD,OADoB;QAEvBE,kBAAkB,EAAEF,OAAO,CAACG,QAAR,KAAqBP,SAAS,CAACC,OAAV,CAAkBO;MAFpC,CAAxB;MAIAT,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcO,eAAd,CAAf,CAAX;IACA,CAND;IAQA,OAAO,MAAM;MACZL,SAAS,CAACC,OAAV,CAAkBQ,UAAlB;IACA,CAFD;EAGA,CAhBQ,EAgBN,CAACZ,MAAD,CAhBM,CAAT;;EAkBA,MAAMa,WAAW,GAAIC,WAAD,IAAiB;IACpCX,SAAS,CAACC,OAAV,CAAkBW,IAAlB,CAAuBlB,sBAAvB,EAA+C;MAC9CmB,IAAI,EAAEF,WADwC;MAE9CJ,QAAQ,EAAEP,SAAS,CAACC,OAAV,CAAkBO;IAFkB,CAA/C;EAIA,CALD;;EAOA,OAAO;IAAEV,QAAF;IAAYY;EAAZ,CAAP;AACA,CA9BD;;GAAMd,O;;AAgCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}