{"ast":null,"code":"var _jsxFileName = \"/home/kalu/messengerApp/client/src/Components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import useChat from '../useChat';\n// import '../style/chat.css';\n// const ChatRoom = (props) => {\n// \tconst { roomId } = props.match.params;\n// \tconst { messages, sendMessage } = useChat(roomId);\n// \tconst [newMessage, setNewMessage] = useState('');\n// \tconst handleNewMessageChange = (event) => {\n// \t\tsetNewMessage(event.target.value);\n// \t};\n// \tconst handleSendMessage = () => {\n// \t\tsendMessage(newMessage);\n// \t\tsetNewMessage('');\n// \t};\n// \treturn (\n// \t\t<div className='chat-room'>\n// \t\t\t<h1 className='room-name'>Room: {roomId}</h1>\n// \t\t\t<div className='messages'>\n// \t\t\t\t<ol className='message-list'>\n// \t\t\t\t\t{messages.map((message, i) => (\n// \t\t\t\t\t\t<li\n// \t\t\t\t\t\t\tkey={i}\n// \t\t\t\t\t\t\tclassName={`message-item ${\n// \t\t\t\t\t\t\t\tmessage.ownedByCurrentUser ? 'my-message' : 'received-message'\n// \t\t\t\t\t\t\t}`}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{message.body}\n// \t\t\t\t\t\t</li>\n// \t\t\t\t\t))}\n// \t\t\t\t</ol>\n// \t\t\t</div>\n// \t\t\t<textarea\n// \t\t\t\tvalue={newMessage}\n// \t\t\t\tonChange={handleNewMessageChange}\n// \t\t\t\tplaceholder='Write message...'\n// \t\t\t\tclassName='new-message-input-field'\n// \t\t\t/>\n// \t\t\t<button onClick={handleSendMessage} className='send-message-button'>\n// \t\t\t\tSend\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default ChatRoom;\nimport React from \"react\";\nimport '../style/chat.css';\nimport useChat from \"../useChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoom = props => {\n  _s();\n\n  const {\n    roomId\n  } = props.match.params;\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"room-name\",\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"messages-list\",\n        children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message-item ${message.ownedByCurrentUser ? \"my-message\" : \"received-message\"}`,\n          children: message.body\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newMessage,\n      onChange: handleNewMessageChange,\n      placeholder: \"Write message...\",\n      className: \"new-message-input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      className: \"send-message-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  console.log(roomId);\n};\n\n_s(ChatRoom, \"WTagyWyP35MlJQyubzPp0SyX1eo=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useChat","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","useState","handleNewMessageChange","event","target","value","handleSendMessage","map","message","i","ownedByCurrentUser","body","console","log"],"sources":["/home/kalu/messengerApp/client/src/Components/ChatRoom.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import useChat from '../useChat';\n// import '../style/chat.css';\n\n// const ChatRoom = (props) => {\n// \tconst { roomId } = props.match.params;\n// \tconst { messages, sendMessage } = useChat(roomId);\n// \tconst [newMessage, setNewMessage] = useState('');\n\n// \tconst handleNewMessageChange = (event) => {\n// \t\tsetNewMessage(event.target.value);\n// \t};\n\n// \tconst handleSendMessage = () => {\n// \t\tsendMessage(newMessage);\n// \t\tsetNewMessage('');\n// \t};\n\n// \treturn (\n// \t\t<div className='chat-room'>\n// \t\t\t<h1 className='room-name'>Room: {roomId}</h1>\n// \t\t\t<div className='messages'>\n// \t\t\t\t<ol className='message-list'>\n// \t\t\t\t\t{messages.map((message, i) => (\n// \t\t\t\t\t\t<li\n// \t\t\t\t\t\t\tkey={i}\n// \t\t\t\t\t\t\tclassName={`message-item ${\n// \t\t\t\t\t\t\t\tmessage.ownedByCurrentUser ? 'my-message' : 'received-message'\n// \t\t\t\t\t\t\t}`}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{message.body}\n// \t\t\t\t\t\t</li>\n// \t\t\t\t\t))}\n// \t\t\t\t</ol>\n// \t\t\t</div>\n// \t\t\t<textarea\n// \t\t\t\tvalue={newMessage}\n// \t\t\t\tonChange={handleNewMessageChange}\n// \t\t\t\tplaceholder='Write message...'\n// \t\t\t\tclassName='new-message-input-field'\n// \t\t\t/>\n// \t\t\t<button onClick={handleSendMessage} className='send-message-button'>\n// \t\t\t\tSend\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n\n// export default ChatRoom;\n\nimport React from \"react\";\n\nimport '../style/chat.css';\nimport useChat from \"../useChat\";\n\nconst ChatRoom = (props) => {\n  const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-room-container\">\n      <h1 className=\"room-name\">Room: {roomId}</h1>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.body}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n  console.log(roomId);\n};\n\nexport default ChatRoom;\n"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM;IAAEC;EAAF,IAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAA4BP,OAAO,CAACG,MAAD,CAAzC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAApC;;EAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCH,aAAa,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAG,MAAM;IAC9BR,WAAW,CAACC,UAAD,CAAX;IACAC,aAAa,CAAC,EAAD,CAAb;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA,wBACE;MAAI,SAAS,EAAC,WAAd;MAAA,qBAAiCN,MAAjC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACE;QAAI,SAAS,EAAC,eAAd;QAAA,UACGG,QAAQ,CAACU,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ;UAEE,SAAS,EAAG,gBACVD,OAAO,CAACE,kBAAR,GAA6B,YAA7B,GAA4C,kBAC7C,EAJH;UAAA,UAMGF,OAAO,CAACG;QANX,GACOF,CADP;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAgBE;MACE,KAAK,EAAEV,UADT;MAEE,QAAQ,EAAEG,sBAFZ;MAGE,WAAW,EAAC,kBAHd;MAIE,SAAS,EAAC;IAJZ;MAAA;MAAA;MAAA;IAAA,QAhBF,eAsBE;MAAQ,OAAO,EAAEI,iBAAjB;MAAoC,SAAS,EAAC,qBAA9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;EA4BAM,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACD,CA3CD;;GAAMF,Q;UAE8BD,O;;;KAF9BC,Q;AA6CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}